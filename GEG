Copyright (c) 2009-2012 Разработчики Биткойн
Распространяется по лицензии на программное обеспечение MIT / X11, см. Прилагаемый
файл license.txt или http://www.opensource.org/licenses/mit-license.php.
Этот продукт включает программное обеспечение, разработанное OpenSSL Project для использования в
набор инструментов OpenSSL (http://www.openssl.org/). Этот продукт включает
криптографическое программное обеспечение, написанное Эриком Янгом (eay@cryptsoft.com) и UPnP
программное обеспечение, написанное Томасом Бернаром.


ЗАМЕЧАНИЯ ПО СТРОКЕ UNIX
================

Строить
--------

cd src /
make -f makefile.unix # Blackcoin без головы

См. Readme-qt.rst для инструкций по сборке BlackCoin QT,
графический блэккойн.

Зависимости
------------

 Библиотека Назначение Описание
 ------- ------- -----------
 libssl Поддержка SSL Безопасная связь
 libdb Berkeley DB Блокчейн и хранилище кошельков
 Библиотека libboost Boost C ++
 miniupnpc Поддержка UPnP Дополнительная поддержка межсетевого экрана
 libqrencode Создание QR-кода Необязательное создание QR-кода

Обратите внимание, что libexecinfo следует установить, если вы собираете в системах * BSD. 
Эта библиотека предоставляет возможность обратной трассировки.

miniupnpc может использоваться для сопоставления портов UPnP. Его можно скачать с
http://miniupnp.tuxfamily.org/files/. Поддержка UPnP скомпилирована и
по умолчанию выключено. Установите для USE_UPNP другое значение, чтобы управлять этим:
 USE_UPNP = - Нет поддержки UPnP - miniupnp не требуется
 USE_UPNP = 0 (по умолчанию) Поддержка UPnP отключена по умолчанию во время выполнения
 USE_UPNP = 1 Поддержка UPnP включена по умолчанию во время выполнения

libqrencode может использоваться для генерации изображений QRCode. Его можно скачать
из http://fukuchi.org/works/qrencode/index.html.en или установлен через
ваш менеджер пакетов. Установите USE_QRCODE для управления этим:
 USE_QRCODE = 0 (по умолчанию) Нет поддержки QRCode - libqrcode не требуется
 USE_QRCODE = 1 поддержка QRCode включена

Лицензии статически подключаемых библиотек:
 Berkeley DB Новая лицензия BSD с дополнительными требованиями, связанными с
               программное обеспечение должно быть бесплатным с открытым исходным кодом
 Увеличить лицензию, подобную MIT
 miniupnpc Новая (3 пункта) лицензия BSD

Версии, использованные в этом выпуске:
 GCC 4.9.0
 OpenSSL 1.0.1g
 Беркли DB 5.3.28.NC
 Повышение 1.55.0
 miniupnpc 1.9.20140401

Инструкции по сборке зависимостей: Ubuntu и Debian
----------------------------------------------
sudo apt-get install build-essential
sudo apt-get install libssl-dev
sudo apt-get install libdb ++ - dev
sudo apt-get install libboost-all-dev
sudo apt-get установить libqrencode-dev

Если вы используете Boost 1.37, добавьте -mt к библиотекам boost в make-файле.


Инструкции по сборке зависимостей: Gentoo
-------------------------------------

emerge -av1 --noreplace boost openssl sys-libs / db

Выполните следующие шаги для сборки (без поддержки UPnP):
 cd $ {BLACKCOIN_DIR} / src
 make -f makefile.unix USE_UPNP =
 раздеть блэккойнд


Ноты
-----
Релиз построен с использованием GCC, а затем «убирает блэккоинд», чтобы убрать отладку.
символы, что уменьшает размер исполняемого файла примерно на 90%.


miniupnpc
---------
tar -xzvf miniupnpc-1.6.tar.gz
компакт-диск miniupnpc-1.6
сделать
sudo su
сделать установку


Berkeley DB
-----------
Вам нужен Berkeley DB. Если вам нужно собрать Berkeley DB самостоятельно:
../dist/configure --enable-cxx
сделать


Увеличение
-----
Если вам нужно самостоятельно собрать Boost:
sudo su
./bootstrap.sh
./bjam установить


Безопасность
--------
Чтобы сделать вашу установку Blackcoin более безопасной, сделав невозможным определенные атаки
эксплуатировать, даже если уязвимость обнаружена, вы можете предпринять следующие меры:

* Независимый от позиции исполняемый файл
    Создайте независимый от позиции код, чтобы воспользоваться преимуществами рандомизации адресного пространства
    предлагается некоторыми ядрами. Злоумышленник, способный вызвать выполнение кода в произвольной
    место в памяти будет заблокировано, если он не знает, где находится что-нибудь полезное.
    Стек и куча по умолчанию расположены случайным образом, но это позволяет разделу кода быть
    также случайно расположенный.

    На процессоре Amd64, где библиотека не была скомпилирована с -fPIC, это вызовет ошибку.
    например: "перемещение R_X86_64_32 против` ...... 'не может использоваться при создании разделяемого объекта; "

    Чтобы построить с помощью PIE, используйте:
    make -f makefile.unix ... -e PIE = 1

    Чтобы проверить, что вы создали исполняемый файл PIE, установите scanelf, часть paxutils, и используйте:
    scanelf -e ./blackcoin

    Вывод должен содержать:
     ТИП
    ET_DYN

* Неисполняемый стек
    Если стек является исполняемым, тогда возможны тривиальные эксплойты на основе переполнения буфера на основе стека, если
    обнаружены уязвимые буферы. По умолчанию блэккойн должен быть построен с неисполняемым стеком.
    но если одна из используемых библиотек запрашивает исполняемый стек или кто-то делает ошибку
    и использует расширение компилятора, для которого требуется исполняемый стек, он незаметно создает
    исполняемый файл без защиты неисполняемого стека.

    Чтобы убедиться, что стек не является исполняемым после компиляции, используйте:
    scanelf -e ./blackcoin

    вывод должен содержать:
    СТК / РЭЛ / ПТЛ
    RW- R- RW-

    STK RW- означает, что стек доступен для чтения и записи, но не исполняемый.
